/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Contributors, ContributorsInterface } from "../Contributors";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
    ],
    name: "distributePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "distribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftxAddress_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "recordWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contributors_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts_",
        type: "uint256[]",
      },
    ],
    name: "setDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611233806100616000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ba29125146100675780634ae7663214610083578063c2db09c11461009f578063c4d66de8146100cf578063ce513b6f146100eb578063dc2f8abd1461011b575b600080fd5b610081600480360381019061007c9190610c43565b610137565b005b61009d60048036038101906100989190610bd7565b610369565b005b6100b960048036038101906100b49190610b72565b6105cb565b6040516100c69190610dca565b60405180910390f35b6100e960048036038101906100e49190610b72565b6105e3565b005b61010560048036038101906101009190610b72565b610722565b6040516101129190610dca565b60405180910390f35b61013560048036038101906101309190610b9b565b61073a565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101be90610d2a565b60405180910390fd5b60005b60018054905081101561036557670de0b6b3a7640000600260006001848154811061021e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361028f9190610efa565b6102999190610ec9565b60036000600184815481106102d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034b9190610e73565b92505081905550808061035d90610ff5565b9150506101ca565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610daa565b60405180910390fd5b600080600090505b825181101561046b57828181518110610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826104569190610e73565b9150808061046390610ff5565b915050610401565b50670de0b6b3a764000081148015610484575081518351145b6104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610d8a565b60405180910390fd5b6104cb6108a6565b82600190805190602001906104e1929190610975565b5060005b83518110156105c557828181518110610527577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516002600086848151811061056c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806105bd90610ff5565b9150506104e5565b50505050565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90610daa565b60405180910390fd5b600060029054906101000a900460ff16156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90610d6a565b60405180910390fd5b6001600060026101000a81548160ff02191690831515021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60036020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190610d2a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390610d4a565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461089b9190610f54565b925050819055505050565b60005b60018054905081101561097257600060026000600184815481106108f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061096a90610ff5565b9150506108a9565b50565b8280548282559060005260206000209081019282156109ee579160200282015b828111156109ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610995565b5b5090506109fb91906109ff565b5090565b5b80821115610a18576000816000905550600101610a00565b5090565b6000610a2f610a2a84610e0a565b610de5565b90508083825260208201905082856020860282011115610a4e57600080fd5b60005b85811015610a7e5781610a648882610af4565b845260208401935060208301925050600181019050610a51565b5050509392505050565b6000610a9b610a9684610e36565b610de5565b90508083825260208201905082856020860282011115610aba57600080fd5b60005b85811015610aea5781610ad08882610b5d565b845260208401935060208301925050600181019050610abd565b5050509392505050565b600081359050610b03816111cf565b92915050565b600082601f830112610b1a57600080fd5b8135610b2a848260208601610a1c565b91505092915050565b600082601f830112610b4457600080fd5b8135610b54848260208601610a88565b91505092915050565b600081359050610b6c816111e6565b92915050565b600060208284031215610b8457600080fd5b6000610b9284828501610af4565b91505092915050565b60008060408385031215610bae57600080fd5b6000610bbc85828601610af4565b9250506020610bcd85828601610b5d565b9150509250929050565b60008060408385031215610bea57600080fd5b600083013567ffffffffffffffff811115610c0457600080fd5b610c1085828601610b09565b925050602083013567ffffffffffffffff811115610c2d57600080fd5b610c3985828601610b33565b9150509250929050565b600060208284031215610c5557600080fd5b6000610c6384828501610b5d565b91505092915050565b6000610c79601b83610e62565b9150610c84826110dc565b602082019050919050565b6000610c9c602383610e62565b9150610ca782611105565b604082019050919050565b6000610cbf601f83610e62565b9150610cca82611154565b602082019050919050565b6000610ce2601983610e62565b9150610ced8261117d565b602082019050919050565b6000610d05601183610e62565b9150610d10826111a6565b602082019050919050565b610d2481610fba565b82525050565b60006020820190508181036000830152610d4381610c6c565b9050919050565b60006020820190508181036000830152610d6381610c8f565b9050919050565b60006020820190508181036000830152610d8381610cb2565b9050919050565b60006020820190508181036000830152610da381610cd5565b9050919050565b60006020820190508181036000830152610dc381610cf8565b9050919050565b6000602082019050610ddf6000830184610d1b565b92915050565b6000610def610e00565b9050610dfb8282610fc4565b919050565b6000604051905090565b600067ffffffffffffffff821115610e2557610e2461109c565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e5157610e5061109c565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000610e7e82610fba565b9150610e8983610fba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebe57610ebd61103e565b5b828201905092915050565b6000610ed482610fba565b9150610edf83610fba565b925082610eef57610eee61106d565b5b828204905092915050565b6000610f0582610fba565b9150610f1083610fba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f4957610f4861103e565b5b828202905092915050565b6000610f5f82610fba565b9150610f6a83610fba565b925082821015610f7d57610f7c61103e565b5b828203905092915050565b6000610f9382610f9a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610fcd826110cb565b810181811067ffffffffffffffff82111715610fec57610feb61109c565b5b80604052505050565b600061100082610fba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110335761103261103e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f596f752063616e6e6f742063616c6c2074686973206d6574686f640000000000600082015250565b7f596f752063616e6e6f74207769746864726177207375636820616e6420616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b7f436f6e747261637468617320616c726561647920696e697469616c697a656400600082015250565b7f446973747269627574696f6e206973206e6f742076616c696400000000000000600082015250565b7f596f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b6111d881610f88565b81146111e357600080fd5b50565b6111ef81610fba565b81146111fa57600080fd5b5056fea26469706673582212200480fa4f757d51c815cb7a3113e4ed17cc9342bb4e5d7794a5e14a6a7d2d62b964736f6c63430008030033";

export class Contributors__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Contributors> {
    return super.deploy(overrides || {}) as Promise<Contributors>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Contributors {
    return super.attach(address) as Contributors;
  }
  connect(signer: Signer): Contributors__factory {
    return super.connect(signer) as Contributors__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContributorsInterface {
    return new utils.Interface(_abi) as ContributorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contributors {
    return new Contract(address, _abi, signerOrProvider) as Contributors;
  }
}
